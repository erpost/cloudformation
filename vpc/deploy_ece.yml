AWSTemplateFormatVersion: 2010-09-09
Description: Deploy ECE

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
    ConstraintDescription: Must be a valid EC2 instance type
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Mappings:
  AWSInstanceType2Arch:
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-2:
      HVM64: ami-0bdcc6c05dec346bf

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.29.67.0/26
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join ['', ["vpc-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.29.67.0/28
      AvailabilityZone: !Select [ 0, !GetAZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ1-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.29.67.16/28
      AvailabilityZone: !Select [ 1, !GetAZs ]    # AZ 2
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ2-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.29.67.32/28
      AvailabilityZone: !Select [ 2, !GetAZs ]    # AZ 3
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ3-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.29.67.48/28
      AvailabilityZone: !Select [ 0, !GetAZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["non-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet1
#      SecurityGroups:
#        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
#  InstanceSecurityGroup:
#    Type: 'AWS::EC2::SecurityGroup'
#    Properties:
#      GroupDescription: Enable SSH access via port 22
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: '22'
#          ToPort: '22'
#          CidrIp: !Ref SSHLocation
