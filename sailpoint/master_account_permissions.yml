AWSTemplateFormatVersion: 2010-09-09
Description: Deploy SailPoint IAM Resources into AWS Organization Master Account

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Parameters"
        Parameters:
          - ResourcePrefix

Parameters:
  ResourcePrefix:
    Type: 'String'
    Description: 'Prefix for the managed resources'
    Default: 'SailPoint'

Resources:
  SailPointServiceGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub "${ResourcePrefix}ServiceGroup"
      ManagedPolicyArns:
        - !Ref SailPointServicePolicy
  SailPointServicePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${ResourcePrefix}ServicePolicy"
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "GetAllUsers"
            Effect: "Allow"
            Action: "iam:GetUser"
            Resource: "*"
          -
            Sid: "AssumeSailPointRole"
            Effect: "Allow"
            Action: "sts:AssumeRole"
            Resource: !Sub "arn:aws:iam::*:role/${ResourcePrefix}Role"
  SailPointServiceUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "${ResourcePrefix}ServiceUser"
      Groups:
        - !Ref SailPointServiceGroup

  SailPointRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ResourcePrefix}Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS:
                - !Join [':', ["arn:aws:iam:", !Ref "AWS::AccountId", "root" ]]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Ref SailPointOrganizationPolicy
        - !Ref SailPointAggregationPolicy
  SailPointOrganizationPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${ResourcePrefix}OrganizationPolicy"
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "GetOrganization"
            Effect: "Allow"
            Action:
              - "organizations:ListPoliciesForTarget"
              - "organizations:ListAccountsForParent"
              - "organizations:ListRoots"
              - "organizations:ListAccounts"
              - "organizations:ListTargetsForPolicy"
              - "organizations:DescribeOrganization"
              - "organizations:DescribeOrganizationalUnit"
              - "organizations:DescribeAccount"
              - "organizations:ListParents"
              - "organizations:ListOrganizationalUnitsForParent"
              - "organizations:DescribePolicy"
              - "organizations:ListPolicies"
            Resource: "*"
  SailPointAggregationPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${ResourcePrefix}AggregationPolicy"
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "GetAggregation"
            Effect: "Allow"
            Action:
              - "iam:GetPolicyVersion"
              - "iam:ListServiceSpecificCredentials"
              - "iam:ListMFADevices"
              - "iam:ListSigningCertificates"
              - "iam:GetGroup"
              - "iam:ListSSHPublicKeys"
              - "iam:ListAttachedRolePolicies"
              - "iam:ListAttachedUserPolicies"
              - "iam:ListAttachedGroupPolicies"
              - "iam:ListRolePolicies"
              - "iam:ListAccessKeys"
              - "iam:ListPolicies"
              - "iam:GetRole"
              - "iam:GetPolicy"
              - "iam:ListGroupPolicies"
              - "iam:ListRoles"
              - "iam:ListUserPolicies"
              - "iam:GetUserPolicy"
              - "iam:ListGroupsForUser"
              - "iam:ListAccountAliases"
              - "iam:ListUsers"
              - "iam:ListGroups"
              - "iam:GetGroupPolicy"
              - "iam:GetUser"
              - "iam:GetRolePolicy"
              - "iam:GetLoginProfile"
              - "iam:ListEntitiesForPolicy"
              - "iam:GetAccessKeyLastUsed"
            Resource: "*"

Outputs:
  OrganizationAccountID:
    Description: Account ID of Organization Master Account
    Value: !Ref "AWS::AccountId"
    Export:
      Name: AccountID