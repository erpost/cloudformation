AWSTemplateFormatVersion: 2010-09-09
Description: Deploy ECE

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - AZs
          - VPCCidr
          - Sub1Cidr
          - Sub2Cidr
          - Sub3Cidr
          - Sub4Cidr
          - Sub5Cidr
          - Sub6Cidr
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - AMIID
          - KeyName
          - KMSKey
          - ManagementInstanceType
          - MasterInstanceType
          - HotDataInstanceType
          - WarmDataInstanceType
          - SSHLocation
    ParameterLabels:
      AZs:
        default: "Choose 3 Availability Zones"
      VPCCidr:
        default: "VPC CIDR Block?"
      Sub1Cidr:
        default: "Subnet 1 CIDR Block?"
      Sub2Cidr:
        default: "Subnet 2 CIDR Block?"
      Sub3Cidr:
        default: "Subnet 3 CIDR Block?"
      Sub4Cidr:
        default: "Subnet 4 CIDR Block?"
      Sub5Cidr:
        default: "Subnet 5 CIDR Block?"
      Sub6Cidr:
        default: "Subnet 6 CIDR Block?"

Parameters:
  VPCCidr:  # VPC CIDR Block
    Type: String
    Default: 172.29.67.0/25
  Sub1Cidr:  # Subnet 1 CIDR Block
    Type: String
    Default: 172.29.67.0/28
  Sub2Cidr:  # Subnet 2 CIDR Block
    Type: String
    Default: 172.29.67.16/28
  Sub3Cidr:  # Subnet 3 CIDR Block
    Type: String
    Default: 172.29.67.32/28
  Sub4Cidr:  # Subnet 4 CIDR Block
    Type: String
    Default: 172.29.67.48/28
  Sub5Cidr:  # Subnet 5 CIDR Block
    Type: String
    Default: 172.29.67.64/28
  Sub6Cidr:  # Subnet 6 CIDR Block
    Type: String
    Default: 172.29.67.80/28
  AZs:  # Availability Zones
    Type: List<AWS::EC2::AvailabilityZone::Name>
  AMIID:
    Description: ID of AMI
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  KMSKey:
    Description: AliasName of an existing KMS Key for encrypting Volumes
    Type: String
  ManagementInstanceType:
    Description: Management Server type
    Type: String
    Default: m5.2xlarge
    AllowedValues:
      - t2.nano
      - m5.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  MasterInstanceType:
    Description: Master Server type
    Type: String
    Default: t3.2xlarge
    AllowedValues:
      - t2.nano
      - t3.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  HotDataInstanceType:
    Description: Hot Data Server type
    Type: String
    Default: r5.2xlarge
    AllowedValues:
      - t2.nano
      - r5.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  WarmDataInstanceType:
    Description: Warm Data Server type
    Type: String
    Default: h1.2xlarge
    AllowedValues:
      - t2.nano
      - h1.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Resources:
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['', ["igw-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join ['', ["vpc-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub1Cidr
      AvailabilityZone: !Select [ 0, !Ref AZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ1-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub2Cidr
      AvailabilityZone: !Select [ 1, !Ref AZs ]    # AZ 2
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ2-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub3Cidr
      AvailabilityZone: !Select [ 2, !Ref AZs ]    # AZ 3
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ3-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub4Cidr
      AvailabilityZone: !Select [ 0, !Ref AZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["non-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub5Cidr
      AvailabilityZone: !Select [ 0, !Ref AZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["public1-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub6Cidr
      AvailabilityZone: !Select [ 1, !Ref AZs ]    # AZ 2
      Tags:
      - Key: Name
        Value: !Join ['', ["public2-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc

  SecurityGroupSSHInbound:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      GroupName: SSH External
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  SecurityGroupSSH:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      GroupName: SSH Internal
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !GetAtt VPC.CidrBlock
  SecurityGroupElastic:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable Elastic Internal Traffic
      GroupName: Elastic Internal
      VpcId: !Ref VPC
  SecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupElastic
      IpProtocol: tcp
      FromPort: '12443'
      ToPort: '12443'
      SourceSecurityGroupId: !Ref SecurityGroupElastic
  SecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupElastic
      IpProtocol: tcp
      FromPort: '9243'
      ToPort: '9243'
      SourceSecurityGroupId: !Ref SecurityGroupElastic

  MGMT1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref ManagementInstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 1
  Master1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref MasterInstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 4
  HotData1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref HotDataInstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 7
  WarmData1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref WarmDataInstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 10
  MGMT1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref ManagementInstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 2
  Master1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref MasterInstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 5
  HotData1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref HotDataInstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 8
  WarmData1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref WarmDataInstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 11
  MGMT1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref ManagementInstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 3
  Master1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref MasterInstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 6
  HotData1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref HotDataInstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 9
  WarmData1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref WarmDataInstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
        - !Ref SecurityGroupElastic
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: 9

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join ['', ["public-rt-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref Subnet5
  BastionHost:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      SubnetId: !Ref Subnet5
      SecurityGroupIds:
        - !Ref SecurityGroupSSHInbound
      KeyName: !Ref KeyName
      ImageId: !Ref AMIID
      Tags:
        - Key: Name
          Value: !Join ['', ["bastion-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
        - Key: Host
          Value: Bastion
  BastionElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref BastionHost
      Tags:
        - Key: Environment
          Value: elastic-poc
  VolumeMGMT1AZ1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt MGMT1AZ1.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az1-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMGMT1AZ1:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref MGMT1AZ1
      VolumeId: !Ref VolumeMGMT1AZ1
  VolumeMaster1AZ1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt Master1AZ1.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az1-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMaster1AZ1:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref Master1AZ1
      VolumeId: !Ref VolumeMaster1AZ1
  VolumeHotData1AZ1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 1024
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt HotData1AZ1.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az1-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeHotData1AZ1:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref HotData1AZ1
      VolumeId: !Ref VolumeHotData1AZ1
  VolumeWarmData1AZ1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 2048
      VolumeType: st1
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt WarmData1AZ1.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az1-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeWarmData1AZ1:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref WarmData1AZ1
      VolumeId: !Ref VolumeWarmData1AZ1
  VolumeMGMT1AZ2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt MGMT1AZ2.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az2-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMGMT1AZ2:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref MGMT1AZ2
      VolumeId: !Ref VolumeMGMT1AZ2
  VolumeMaster1AZ2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt Master1AZ2.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az2-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMaster1AZ2:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref Master1AZ2
      VolumeId: !Ref VolumeMaster1AZ2
  VolumeHotData1AZ2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 1024
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt HotData1AZ2.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az2-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeHotData1AZ2:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref HotData1AZ2
      VolumeId: !Ref VolumeHotData1AZ2
  VolumeWarmData1AZ2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 2048
      VolumeType: st1
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt WarmData1AZ2.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az2-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeWarmData1AZ2:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref WarmData1AZ2
      VolumeId: !Ref VolumeWarmData1AZ2
  VolumeMGMT1AZ3:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt MGMT1AZ3.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az3-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMGMT1AZ3:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref MGMT1AZ3
      VolumeId: !Ref VolumeMGMT1AZ3
  VolumeMaster1AZ3:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt Master1AZ3.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az3-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeMaster1AZ3:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref Master1AZ3
      VolumeId: !Ref VolumeMaster1AZ3
  VolumeHotData1AZ3:
    Type: AWS::EC2::Volume
    Properties:
      Size: 1024
      VolumeType: gp2
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt HotData1AZ3.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az3-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeHotData1AZ3:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref HotData1AZ3
      VolumeId: !Ref VolumeHotData1AZ3
  VolumeWarmData1AZ3:
    Type: AWS::EC2::Volume
    Properties:
      Size: 2048
      VolumeType: st1
      Encrypted: true
      KmsKeyId: !Join ['', ["alias/", !Ref "KMSKey" ]]
      AvailabilityZone: !GetAtt WarmData1AZ3.AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join ['', ["warmdata1-az3-vol-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  AttachVolumeWarmData1AZ3:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/sdb
      InstanceId: !Ref WarmData1AZ3
      VolumeId: !Ref VolumeWarmData1AZ3

Outputs:
  MGMT1AZ1PrivateIP:
    Description: Private IP of MGMT1AZ1 (Host 01)
    Value: !GetAtt MGMT1AZ1.PrivateIp
  MGMT1AZ2PrivateIP:
    Description: Private IP of MGMT1AZ2 (Host 02)
    Value: !GetAtt MGMT1AZ2.PrivateIp
  MGMT1AZ3PrivateIP:
    Description: Private IP of MGMT1AZ3 (Host 03)
    Value: !GetAtt MGMT1AZ3.PrivateIp
  Master1AZ1PrivateIP:
    Description: Private IP of Master1AZ1 (Host 04)
    Value: !GetAtt Master1AZ1.PrivateIp
  Master1AZ2PrivateIP:
    Description: Private IP of Master1AZ2 (Host 05)
    Value: !GetAtt Master1AZ2.PrivateIp
  Master1AZ3PrivateIP:
    Description: Private IP of Master1AZ3 (Host 06)
    Value: !GetAtt Master1AZ3.PrivateIp
  HotData1AZ1PrivateIP:
    Description: Private IP of HotData1AZ1 (Host 07)
    Value: !GetAtt HotData1AZ1.PrivateIp
  HotData1AZ2PrivateIP:
    Description: Private IP of HotData1AZ2 (Host 08)
    Value: !GetAtt HotData1AZ2.PrivateIp
  HotData1AZ3PrivateIP:
    Description: Private IP of HotData1AZ3 (Host 09)
    Value: !GetAtt HotData1AZ3.PrivateIp
  WarmData1AZ1PrivateIP:
    Description: Private IP of WarmData1AZ1 (Host 10)
    Value: !GetAtt WarmData1AZ1.PrivateIp
  WarmData1AZ2PrivateIP:
    Description: Private IP of WarmData1AZ2 (Host 11)
    Value: !GetAtt WarmData1AZ2.PrivateIp
  WarmData1AZ3PrivateIP:
    Description: Private IP of WarmData1AZ3 (Host 12)
    Value: !GetAtt WarmData1AZ3.PrivateIp
  BastionHostPublicIP:
    Description: Public IP of Bastion Host
    Value: !GetAtt BastionHost.PublicIp
