AWSTemplateFormatVersion: 2010-09-09
Description: Deploy ECE

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - AZs
          - VPCCidr
          - Sub1Cidr
          - Sub2Cidr
          - Sub3Cidr
          - Sub4Cidr
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - KeyName
          - InstanceType
          - SSHLocation
    ParameterLabels:
      AZs:
        default: "Choose 3 Availability Zones"
      VPCCidr:
        default: "VPC CIDR Block?"
      Sub1Cidr:
        default: "Subnet 1 CIDR Block?"
      Sub2Cidr:
        default: "Subnet 2 CIDR Block?"
      Sub3Cidr:
        default: "Subnet 3 CIDR Block?"
      Sub4Cidr:
        default: "Subnet 4 CIDR Block?"

Parameters:
  VPCCidr:  # VPC CIDR Block
    Type: String
    Default: 172.29.67.0/26
  Sub1Cidr:  # Subnet 1 CIDR Block
    Type: String
    Default: 172.29.67.0/28
  Sub2Cidr:  # Subnet 2 CIDR Block
    Type: String
    Default: 172.29.67.16/28
  Sub3Cidr:  # Subnet 3 CIDR Block
    Type: String
    Default: 172.29.67.32/28
  Sub4Cidr:  # Subnet 4 CIDR Block
    Type: String
    Default: 172.29.67.48/28
  AZs:  # Availability Zones
    Type: List<AWS::EC2::AvailabilityZone::Name>
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
    ConstraintDescription: Must be a valid EC2 instance type
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Mappings:
  AWSInstanceType2Arch:
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-2:
      HVM64: ami-0bdcc6c05dec346bf

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join ['', ["vpc-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub1Cidr
      AvailabilityZone: !Select [ 0, !Ref AZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ1-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub2Cidr
      AvailabilityZone: !Select [ 1, !Ref AZs ]    # AZ 2
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ2-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub3Cidr
      AvailabilityZone: !Select [ 2, !Ref AZs ]    # AZ 3
      Tags:
      - Key: Name
        Value: !Join ['', ["AZ3-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc
  Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Sub4Cidr
      AvailabilityZone: !Select [ 0, !Ref AZs ]    # AZ 1
      Tags:
      - Key: Name
        Value: !Join ['', ["non-", !Ref "AWS::StackName" ]]
      - Key: Environment
        Value: elastic-poc

  SecurityGroupSSH:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      GroupName: SSH Inbound
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation

  MGMT1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  Master1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  HotData1AZ1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az1-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  MGMT1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  Master1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  HotData1AZ2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet2
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az2-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  MGMT1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["mgmt1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  Master1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["master1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc
  HotData1AZ3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref Subnet3
      SecurityGroupIds:
        - !Ref SecurityGroupSSH
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags:
        - Key: Name
          Value: !Join ['', ["hotdata1-az3-", !Ref "AWS::StackName" ]]
        - Key: Environment
          Value: elastic-poc

Outputs:
  MGMT1AZ1PrivateIP:
    Description: Private IP of MGMT1AZ1
    Value: !GetAtt MGMT1AZ1.PrivateIp
  MGMT1AZ2PrivateIP:
    Description: Private IP of MGMT1AZ2
    Value: !GetAtt MGMT1AZ2.PrivateIp
  MGMT1AZ3PrivateIP:
    Description: Private IP of MGMT1AZ3
    Value: !GetAtt MGMT1AZ3.PrivateIp
