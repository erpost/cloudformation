AWSTemplateFormatVersion: 2010-09-09
Description: Deploy ECE IAM Resources for Networking Tier

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "IAM Configuration"
        Parameters:
          - S3BackupBucket
          - NetworkStackName
          - ComputeStackName
Parameters:
  S3BackupBucket:
    Description: Pre-created S3 Bucket to be used for Hot and/or Warm Tier Backups
    Type: String
    MinLength: '1'
    MaxLength: '255'
    Default: ece-poc-backups
  NetworkStackName:
    Description: CloudFormation Network Stack Name
    Type: String
    MinLength: '1'
    MaxLength: '255'
    Default: ece-network
  ComputeStackName:
    Description: CloudFormation Compute Stack Name
    Type: String
    MinLength: '1'
    MaxLength: '255'
    Default: ece-compute

Resources:
  FlowLogRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "vpc-flow-logs.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  FlowLogRolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "flowlogpolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
              - "logs:PutLogEvents"
            Resource: "*"
      Roles:
        -
          Ref: "FlowLogRole"
  DeployECERole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  ECERolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "deployecepolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "acm:*"
              - "ec2:*"
              - "elasticloadbalancing:*"
              - "kms:*"
              - "logs:*"
              - "route53:*"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource:
              - !GetAtt FlowLogRole.Arn
              - !GetAtt Ec2ProfileRole.Arn
      Roles:
        -
          Ref: "DeployECERole"
  CloudFormationDeployGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: "CloudFormationDeployers"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref S3CloudFormationPolicy

  S3CloudFormationPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: S3 Permissions for deploying CloudFormation
      ManagedPolicyName: S3CloudFormationPolicy
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - s3:Get*
              - s3:List*
              - s3:PutObject
            Resource: "arn:aws:s3:::cf-templates-*"
          -
            Effect: "Allow"
            Action:
              - cloudformation:*
            Resource:
              - !Sub "arn:aws:cloudformation:*:*:stack/${NetworkStackName}/*"
              - !Sub "arn:aws:cloudformation:*:*:stack/${ComputeStackName}/*"
          -
            Effect: "Allow"
            Action: cloudformation:CreateUploadBucket
            Resource: "*"

  Ec2ProfileRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  Ec2ProfileRolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "ec2profilepolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
              - "s3:ListBucketMultipartUploads"
              - "s3:ListBucketVersions"
            Resource: !Join ['', ["arn:aws:s3:::", !Ref S3BackupBucket ]]
          -
            Effect: "Allow"
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
              - "s3:AbortMultipartUpload"
              - "s3:ListMultipartUploadParts"
            Resource: !Join ['', ["arn:aws:s3:::", !Ref S3BackupBucket, "/*" ]]
      Roles:
        -
          Ref: "Ec2ProfileRole"
  Ec2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          Ref: "Ec2ProfileRole"

  PassRolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: "policy-passrole"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource:
              - !GetAtt DeployECERole.Arn
      Groups:
        - !Ref CloudFormationDeployGroup

Outputs:
  FlowLogRole:
    Description: FlowLog Role CrossStack ID
    Value: !GetAtt FlowLogRole.Arn
    Export:
      Name:
        !Sub "${AWS::StackName}-FlowLogRole"
  Ec2InstanceProfile:
    Description: EC2 Instance Role CrossStack ID
    Value: !Ref Ec2InstanceProfile
    Export:
      Name:
        !Sub "${AWS::StackName}-EC2InstanceProfile"